package mods.roborave.edm;
import java.util.Arrays;

import mods.roborave.edm.common.CommonProxy;
import mods.roborave.edm.config.Config;
import mods.roborave.edm.helper.LogHandler;
import mods.roborave.edm.helper.VersionChecker;
import mods.roborave.edm.init.AbilityHandler;
import mods.roborave.edm.init.Armor;
import mods.roborave.edm.init.Blocks;
import mods.roborave.edm.init.Items;
import mods.roborave.edm.init.json.JsonCreatorAbility;
import mods.roborave.edm.lib.Reference;
import mods.roborave.edm.lib.Strings;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import net.minecraftforge.fml.client.event.ConfigChangedEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

@Mod(modid = Strings.MODID, name = Strings.name, version = Strings.version,guiFactory="mods.roborave.edm.gui.ConfigGUIFactory")
public class EDM
{
	@SidedProxy(clientSide=Reference.PROXY_CLIENT,serverSide=Reference.PROXY_COMMON)
	
	public static CommonProxy proxy;
	/**
	 * Minecraft's actual version
	 */
	public String acutalMCversion= "1.8.9";
	
	public static final CreativeTabs tabEDMBlock = new CreativeTabs(CreativeTabs.getNextID(), "EDM:Blocks")
    {
        @SideOnly(Side.CLIENT)
        public Item getTabIconItem()
        {
            return Item.getItemFromBlock(Blocks.getBlock("Black_diamond_Block"));
        }
    };
	
    public static final CreativeTabs tabEDMItems = new CreativeTabs(CreativeTabs.getNextID(), "EDM:Items")
    {
        @SideOnly(Side.CLIENT)
        public Item getTabIconItem()
        {
            return Items.OD;
        }
    };
	public static final CreativeTabs tabEDMArmor = new CreativeTabs(CreativeTabs.getNextID(), "EDM:Armor")
	{
		@SideOnly(Side.CLIENT)
		public Item getTabIconItem()
		{
			return Armor.GDH;
		}
	};
	public static Config VersionConfig;
	
	public LogHandler logger = new LogHandler();
	
	public Strings library;
	
	@Mod.Metadata(Strings.MODID)
	public ModMetadata meta;

	@Mod.Instance(Strings.MODID)
	public static EDM Instance;
	
	public static int ticker;
	public static String category_version=Strings.CONFIG_CATEGORY_VERCHECK;

	public static boolean hardMode;
	public static boolean test=true;
	public static String descriptionDEV="turn this on for hard mode which will make the swords unenchanted. WIP";
	
	private static void syncConfig() 
	{
		EDM.getVersionConfig().load();
		EDM.getVersionConfig().save();
	}
	
	@Mod.EventHandler
	public void PreInit(FMLPreInitializationEvent event)
	{
		meta = event.getModMetadata();
		meta.autogenerated = false;
		meta.credits = "(C) Roborave, 2013-2016";
		meta.authorList = Arrays.asList("Roborave");
		meta.modId=Strings.MODID;
		meta.name=Strings.name;
		meta.version=Strings.version;
		
		VersionChecker.registerMod(meta);
		JsonCreatorAbility.genDefaults();
		EDM.setVersionConfig(new Config(event.getSuggestedConfigurationFile())); 
		syncConfig();
		proxy.PreInit();
	}
	
	@SubscribeEvent
    public void onConfigChanged(ConfigChangedEvent.OnConfigChangedEvent eventArgs) {
        if(eventArgs.modID.equals("Extra_Diamonds_Mod"));
           syncConfig();
    }

	@EventHandler
	public void Init(FMLInitializationEvent event)
	{
		if(EDM.getVersionConfig().checkForUpdates()) 
		{
			VersionChecker.startVersionCheck();
		}

		proxy.registerTickers();
		proxy.Init();
		//AbilityHandler.init();
	}
	
	@EventHandler
	public void PostInit(FMLPostInitializationEvent event)
	{
		
	}

	public LogHandler getLogger() 
	{
		return logger;
	}

	public void setLogger(LogHandler logger) 
	{
		this.logger = logger;
	}

	public static Config getVersionConfig() {
		return VersionConfig;
	}

	public static void setVersionConfig(Config versionConfig) 
	{
		VersionConfig = versionConfig;
	}
}
